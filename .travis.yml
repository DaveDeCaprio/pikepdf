language: cpp
dist: trusty
sudo: false
cache:
  ccache: true
  directories:
  - $HOME/Library/Caches/Homebrew


matrix:
  include:
  - env: PYTHON=3.6 GCC=7
    os: linux
    sudo: required
    addons:
      apt:
        sources: [ubuntu-toolchain-r-test, deadsnakes]
        packages: [g++-7, python3.6-dev]

  - stage: wheels
    script:
    - python3 setup.py sdist -d wheelhouse

  - stage: wheels
    os: linux
    sudo: required
    services:
      - docker
    install:
      - pip install cibuildwheel==0.6.0
      - mkdir gcc-x86_64 && wget -q https://github.com/Noctem/pogeo-toolchain/releases/download/v1.4/gcc-7.2-binutils-2.29-centos5-x86-64.tar.bz2 -O - | tar xj -C gcc-x86_64 --strip-components=1
      #- mkdir ccache && wget -q https://www.samba.org/ftp/ccache/ccache-3.3.4.tar.bz2 -O - | tar xj -C ccache --strip-components=1
      - mkdir qpdf && wget -q https://sourceforge.net/projects/qpdf/files/qpdf/7.0.0/qpdf-7.0.0.tar.gz -O - | tar xz -C qpdf --strip-components=1
    script:
      #- export CIBW_ENVIRONMENT='ARCH=x86_64 PATH="`pwd`/gcc-$ARCH/bin:$PATH" CC="ccache cc" CXX="ccache c++" CXXFLAGS="-static-libstdc++" LD_LIBRARY_PATH="`pwd`/gcc-$ARCH/lib" CCACHE_BASEDIR=`python -c "import tempfile; import os; print(os.path.realpath(tempfile.gettempdir()))"` CCACHE_DIR=/host'$HOME'/.ccache'
      #- export CIBW_BEFORE_BUILD='{pip} install pybind11 && [ -d ccache/$ARCH ] || (unset CC CXX CXXFLAGS && mkdir ccache/$ARCH && cd ccache/$ARCH && ../configure && make install)'
      - export CIBW_ENVIRONMENT='ARCH=x86_64 PATH="`pwd`/gcc-$ARCH/bin:$PATH" CXXFLAGS="-static-libstdc++" LD_LIBRARY_PATH="`pwd`/gcc-$ARCH/lib"'
      - export CIBW_BEFORE_BUILD='cd qpdf && ./configure && make install && cd .. && {pip} install pybind11'
      - export CIBW_SKIP="cp27-* cp33-* cp34-* *i686"
      - cibuildwheel    

stages:
  - name: test
  - name: wheels


before_install:
- set -e
- |
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    if [ -n "$GCC" ]; then
      export CC="gcc-$GCC"
      export CXX="g++-$GCC"
      export LD_LIBRARY_PATH="/lib:/usr/lib:/usr/local/lib"
    elif [ -n "$CLANG" ]; then
      export CC="ccache clang-$CLANG"
      export CXX="ccache clang++-$CLANG"
      export CFLAGS="-Qunused-arguments"
      export CXXFLAGS="-Qunused-arguments -stdlib=libc++"
    fi
    PYTHON_CMD=python$PYTHON
  fi


install:
- |
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then 
    wget -q https://sourceforge.net/projects/qpdf/files/qpdf/7.0.0/qpdf-7.0.0.tar.gz
    tar zxf qpdf-7.0.0.tar.gz
    cd qpdf-7.0.0/
    ./configure CC="ccache $CC" CXX="ccache $CXX"
    make -j 2
    sudo make install
    cd ..
    # Ubuntu 14.04 has a broken Python, missing pip and ensurepip etc. 
    $PYTHON_CMD -m venv --clear --without-pip venv
    source venv/bin/activate    
    curl https://bootstrap.pypa.io/get-pip.py | python
    deactivate
    source venv/bin/activate
  fi
  if [ "$TRAVIS_OS_NAME" = "osx" ]; then
    brew update; brew install python3 qpdf;
    $PYTHON_CMD -m venv venv
    source venv/bin/activate
  fi
  # Must be in venv by this point
  python setup.py sdist
  pip install pybind11
  pip install --verbose dist/*.tar.gz
  pip install -r test_requirements.txt 

script:
- python -m pytest
